{
  "name": "glsl-canvas",
  "displayName": "glsl-canvas",
  "description": "Live WebGL preview of GLSL shaders",
  "version": "0.2.15",
  "author": "Luca Zampetti <lzampetti@gmail.com>",
  "publisher": "circledev",
  "license": "MIT",
  "engines": {
    "vscode": "^1.38.0"
  },
  "categories": [
    "Snippets",
    "Other"
  ],
  "activationEvents": [
    "onCommand:glsl-canvas.showGlslCanvas",
    "onWebviewPanel:glslCanvas",
    "onLanguage:glsl"
  ],
  "main": "./out/extension",
  "bugs": {
    "url": "https://github.com/actarian/vscode-glsl-canvas/issues"
  },
  "homepage": "https://github.com/actarian/vscode-glsl-canvas/blob/master/README.md",
  "contributes": {
    "configuration": {
      "properties": {
        "glsl-canvas.textures": {
          "type": "object",
          "description": "The texture channels (u_texture_0, u_texture_1, ...) using http:// or file:// protocol."
        },
        "glsl-canvas.uniforms": {
          "type": "object",
          "description": "Custom uniforms values."
        },
        "glsl-canvas.extensions": {
          "type": "array",
          "description": "An array of extensions to enable in the webgl context, like EXT_shader_texture_lod."
        },
        "glsl-canvas.doubleSided": {
          "type": "boolean",
          "description": "Enables/Disables doubleSided rendering."
        },
        "glsl-canvas.antialias": {
          "type": "boolean",
          "description": "Enables/Disables antialias in webgl context."
        },
        "glsl-canvas.timeout": {
          "type": "number",
          "default": 0,
          "description": "Wait time in milliseconds before updating the canvas after a change in the source code. Set 0 to update immediately."
        },
        "glsl-canvas.refreshOnSave": {
          "type": "boolean",
          "default": true,
          "description": "Enables/Disables refreshing the glslCanvas when saving the document."
        },
        "glsl-canvas.refreshOnChange": {
          "type": "boolean",
          "default": true,
          "description": "Enables/Disables refreshing the glslCanvas when changing the document."
        },
        "glsl-canvas.installOnExport": {
          "type": "boolean",
          "default": true,
          "description": "Enables/Disables installing Npm packages on export. Requires Npm."
        },
        "glsl-canvas.useFormatter": {
          "type": "boolean",
          "default": true,
          "description": "Enables/Disables code formatter."
        },
        "glsl-canvas.useCompactFormatter": {
          "type": "boolean",
          "default": true,
          "description": "Enables/Disables compact formatter."
        },
        "glsl-canvas.recordMethod": {
          "type": "string",
          "default": "MediaRecorder",
          "enum": [
            "MediaRecorder",
            "CCapture"
          ],
          "enumDescriptions": [
            "Use MediaRecorder api for standard quality webm video capture.",
            "Use CCapture for high quality webm video capture (slower)."
          ]
        },
        "glsl-canvas.recordDuration": {
          "type": "number",
          "default": 0,
          "description": "Recording duration in seconds. Set 0 for manual control."
        },
        "glsl-canvas.recordWidth": {
          "type": "number",
          "default": 1024,
          "description": "Recording canvas width in pixels. Set 0 to adapt."
        },
        "glsl-canvas.recordHeight": {
          "type": "number",
          "default": 1024,
          "description": "Recording canvas height in pixels. Set 0 to adapt."
        }
      }
    },
    "commands": [
      {
        "command": "glsl-canvas.showGlslCanvas",
        "title": "Show glslCanvas"
      }
    ],
    "snippets": [
      {
        "language": "glsl",
        "path": "./snippets/glsl.json"
      }
    ],
    "languages": [
      {
        "id": "glsl",
        "aliases": [
          "GLSL",
          "OpenGL Shading Language",
          "glsl"
        ],
        "extensions": [
          ".vs",
          ".fs",
          ".gs",
          ".comp",
          ".vert",
          ".tesc",
          ".tese",
          ".frag",
          ".geom",
          ".glsl",
          ".glslv",
          ".glslf",
          ".glslg"
        ],
        "configuration": "./glsl.configuration.json"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "lint": "eslint . --ext .ts,.tsx",
    "watch": "tsc -w -p ./",
    "pretest": "npm run compile",
    "test": "node ./out/test/runTest.js"
  },
  "keywords": [
    "shader",
    "glsl"
  ],
  "icon": "resources/img/icon.png",
  "repository": {
    "type": "git",
    "url": "git://github.com/actarian/vscode-glsl-canvas.git"
  },
  "dependencies": {
    "ccapture.js": "1.1.0",
    "dat.gui": "0.7.7",
    "glsl-canvas-js": "0.2.8",
    "glslEditor": "0.0.22",
    "natives": "~1.1.6",
    "spawn-command-with-kill": "~1.0.2",
    "stats.js": "0.17.0"
  },
  "devDependencies": {
    "gulpfile-config": "1.0.0-alpha.14",
    "@types/mocha": "7.0.2",
    "@types/node": "13.9.5",
    "@types/vscode": "1.38.0",
    "@typescript-eslint/eslint-plugin": "4.16.0",
    "@typescript-eslint/parser": "4.16.0",
    "eslint": "6.8.0",
    "mocha": "10.2.0",
    "typescript": "3.8.3",
    "vscode-test": "1.3.0"
  }
}
